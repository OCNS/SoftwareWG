<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>INCF/OCNS Software WG - GeNN</title><link href="https://ocns.github.io/SoftwareWG/" rel="alternate"></link><link href="https://ocns.github.io/SoftwareWG/feeds/tags/genn.atom.xml" rel="self"></link><id>https://ocns.github.io/SoftwareWG/</id><updated>2021-06-03T11:35:23+01:00</updated><subtitle>The INCF/OCNS Software Working Group</subtitle><entry><title>Dev session: James Knight, Thomas Nowotny:Â GeNN</title><link href="https://ocns.github.io/SoftwareWG/2021/02/26/dev-session-james-knight-thomas-nowotny-genn.html" rel="alternate"></link><published>2021-02-26T18:33:55+00:00</published><updated>2021-06-03T11:35:23+01:00</updated><author><name>Ankur Sinha</name></author><id>tag:ocns.github.io,2021-02-26:/SoftwareWG/2021/02/26/dev-session-james-knight-thomas-nowotny-genn.html</id><summary type="html">&lt;p class="first last"&gt;&lt;a class="reference external" href="http://www.sussex.ac.uk/profiles/415734"&gt;James Knight&lt;/a&gt; and &lt;a class="reference external" href="http://www.sussex.ac.uk/profiles/206151"&gt;Thomas Nowotny&lt;/a&gt; will introduce the &lt;a class="reference external" href="http://genn-team.github.io/genn/"&gt;GeNN&lt;/a&gt; simulation environment and discuss its development in this dev&amp;nbsp;session.&lt;/p&gt;
</summary><content type="html">&lt;center&gt;&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="http://genn-team.github.io/genn/"&gt;
&lt;img alt="The GeNN simulator" class="img-responsive" src="https://ocns.github.io/SoftwareWG/images/20210304-genn.png" style="width: 50%;" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;br /&gt;

&lt;center&gt;
 &lt;iframe width="560" height="315" style="height: 315px;" src="https://www.youtube.com/embed/1ZHpKG41kp8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;br /&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.sussex.ac.uk/profiles/415734"&gt;James Knight&lt;/a&gt; and &lt;a class="reference external" href="http://www.sussex.ac.uk/profiles/206151"&gt;Thomas Nowotny&lt;/a&gt; will introduce the &lt;a class="reference external" href="http://genn-team.github.io/genn/"&gt;GeNN&lt;/a&gt; simulation environment and discuss its development in this dev&amp;nbsp;session.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Date: March 9, 2021, 1700 &lt;span class="caps"&gt;UTC&lt;/span&gt; (Click &lt;a class="reference external" href="https://www.timeanddate.com/worldclock/fixedtime.html?msg=Dev+session%3A+James+Knight%2CThomas+Nowotny%3A+GeNN&amp;amp;iso=20210309T17&amp;amp;p1=136&amp;amp;ah=1"&gt;here&lt;/a&gt; to see your local&amp;nbsp;time).&lt;/li&gt;
&lt;li&gt;Location (Zoom): (link no longer&amp;nbsp;valid)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The abstract for the talk is&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;Large-scale numerical simulations of brain circuit models are important for identifying hypotheses on brain functions and testing their consistency and plausibility.
Similarly, spiking neural networks are also gaining traction in machine learning with the promise that neuromorphic hardware will eventually make them much more energy efficient than classical ANNs.
In this dev session, we will present the &lt;a class="reference external" href="http://genn-team.github.io/genn/"&gt;GeNN&lt;/a&gt; (&lt;span class="caps"&gt;GPU&lt;/span&gt;-enhanced Neuronal Networks) framework [1], which aims to facilitate the use of graphics accelerators for computational models of large-scale spiking neuronal networks to address the challenge of efficient simulations.
&lt;a class="reference external" href="http://genn-team.github.io/genn/"&gt;GeNN&lt;/a&gt; is an open source library that generates code to accelerate the execution of network simulations on &lt;span class="caps"&gt;NVIDIA&lt;/span&gt; GPUs through a flexible and extensible interface, which does not require in-depth technical knowledge from the users.
&lt;a class="reference external" href="http://genn-team.github.io/genn/"&gt;GeNN&lt;/a&gt; was originally developed as a pure C++ and &lt;a class="reference external" href="https://www.nvidia.com/en-gb/geforce/technologies/cuda/"&gt;&lt;span class="caps"&gt;CUDA&lt;/span&gt;&lt;/a&gt; library but, subsequently, we have added a Python interface and &lt;a class="reference external" href="https://www.khronos.org/opencl/"&gt;OpenCL&lt;/a&gt; backend.
The Python interface has enabled us to develop a &lt;a class="reference external" href="http://neuralensemble.org/PyNN/"&gt;PyNN&lt;/a&gt; [2] frontend and we are also working on a Keras-inspired frontend for spike-based machine learning&amp;nbsp;[3].&lt;/p&gt;
&lt;p&gt;In the session we will briefly cover the history and basic philosophy of &lt;a class="reference external" href="http://genn-team.github.io/genn/"&gt;GeNN&lt;/a&gt; and show some simple examples of how it is used and how it works inside.
We will then talk in more depth about its development with a focus on testing for &lt;span class="caps"&gt;GPU&lt;/span&gt; dependent software and some of the further developments such as Brian2GeNN&amp;nbsp;[4].&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;[1] &lt;a class="reference external" href="https://github.com/genn-team/genn"&gt;https://github.com/genn-team/genn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a class="reference external" href="https://github.com/genn-team/pynn_genn"&gt;https://github.com/genn-team/pynn_genn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[3] &lt;a class="reference external" href="https://github.com/genn-team/ml_genn"&gt;https://github.com/genn-team/ml_genn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[4] &lt;a class="reference external" href="https://github.com/brian-team/brian2genn"&gt;https://github.com/brian-team/brian2genn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Events"></category><category term="GeNN"></category><category term="Dev session"></category><category term="GPU"></category><category term="Python"></category><category term="C++"></category><category term="CUDA"></category><category term="Nvidia"></category><category term="Simulation"></category><category term="Code generation"></category></entry></feed>